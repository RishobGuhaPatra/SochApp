{"version":3,"sources":["webpack:///./src/app/post/post.module.ts","webpack:///./src/app/post/post.page.html","webpack:///./src/app/post/post.page.scss","webpack:///./src/app/post/post.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEN;AACO;AAE9C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDAAQ;KACpB;CACF,CAAC;AAYF;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAV1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACd,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,yDAAW;aACT;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;AC3B3B,iGAAiG,mBAAmB,uOAAuO,UAAU,aAAa,UAAU,4DAA4D,kBAAkB,sEAAsE,iBAAiB,sL;;;;;;;;;;;ACAjiB,+DAA+D,mI;;;;;;;;;;;;;;;;;;;ACAb;AACD;AACjD,wFAAwF;AAC1C;AAC9C,2CAA2C;AAO3C;IAUC,kBACS,KAAqB;IAC7B,iCAAiC;IACzB,IAAiB;QAFjB,UAAK,GAAL,KAAK,CAAgB;QAErB,SAAI,GAAJ,IAAI,CAAa;QAV1B,WAAM,GAAW,EAAE;QAKnB,cAAS,GAAW,aAAa;IAOjC,CAAC;IAED,2BAAQ,GAAR;QACC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC;QACpD,4DAA4D;QAC5D,kEAAkE;QAClE,mBAAmB;QACnB,4BAA4B;QAC5B,qFAAqF;QACrF,KAAK;IACN,CAAC;IAED,8BAAW,GAAX;QACC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;IACvB,CAAC;IAED,8BAAW,GAAX;QACC,wCAAwC;QACxC,+BAA+B;QAC/B,+DAA+D;QAC/D,MAAM;QACN,WAAW;QACX,+BAA+B;QAC/B,gEAAgE;QAChE,MAAM;QACN,IAAI;IACL,CAAC;IAzCW,QAAQ;QALpB,+DAAS,CAAC;YACV,QAAQ,EAAE,UAAU;YACpB,sFAA+B;;SAE/B,CAAC;+EAYe,8DAAc;YAEf,yDAAW;OAbd,QAAQ,CA2CpB;IAAD,eAAC;CAAA;AA3CoB","file":"post-post-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PostPage } from './post.page';\r\nimport { ShareModule } from '../share.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PostPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n\tRouterModule.forChild(routes),\r\n\tShareModule\r\n  ],\r\n  declarations: [PostPage]\r\n})\r\nexport class PostPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n\\t<ion-toolbar *ngIf=\\\"post as postData\\\">\\r\\n\\t\\t<ion-title>{{ postData.author }}'s Post</ion-title>\\r\\n\\t</ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n\\r\\n\\t<app-loading *ngIf=\\\"!post\\\"></app-loading>\\r\\n\\r\\n\\t<ion-card *ngIf=\\\"post as postData\\\">\\r\\n\\t\\t<ion-img src=\\\"https://ucarecdn.com/{{ postID }}/-/preview/{{ effect }}\\\"></ion-img>\\r\\n\\t\\t<ion-card-title padding>\\r\\n\\t\\t\\t<p>{{ postData.title }}</p>\\r\\n\\t\\t</ion-card-title>\\r\\n\\t\\t<ion-card-content>\\r\\n\\t\\t\\t<p>{{ postData.desc }}</p>\\r\\n\\t\\t</ion-card-content>\\r\\n\\t\\t<ion-item (click)=\\\"toggleHeart()\\\">\\r\\n\\t\\t\\t<ion-icon [name]=\\\"heartType\\\"></ion-icon>\\r\\n\\t\\t</ion-item>\\r\\n\\t</ion-card>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QvcG9zdC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n// import { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\r\nimport { UserService } from '../user.service';\r\n// import { firestore } from 'firebase/app'\r\n\r\n@Component({\r\n\tselector: 'app-post',\r\n\ttemplateUrl: './post.page.html',\r\n\tstyleUrls: ['./post.page.scss'],\r\n})\r\nexport class PostPage implements OnInit {\r\n\r\n\tpostID: string\r\n\teffect: string = ''\r\n\tpost\r\n\t// postReference: AngularFirestoreDocument\r\n\tsub\r\n\r\n\theartType: string = \"heart-empty\"\r\n\r\n\tconstructor(\r\n\t\tprivate route: ActivatedRoute, \r\n\t\t// private afs: AngularFirestore,\r\n\t\tprivate user: UserService) {\r\n\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.postID = this.route.snapshot.paramMap.get('id')\r\n\t\t// this.postReference = this.afs.doc(`posts/${this.postID}`)\r\n\t\t// this.sub = this.postReference.valueChanges().subscribe(val => {\r\n\t\t// \tthis.post = val\r\n\t\t// \tthis.effect = val.effect\r\n\t\t// \tthis.heartType = val.likes.includes(this.user.getUID()) ? 'heart' : 'heart-empty'\r\n\t\t// })\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.sub.unsubscribe()\r\n\t}\r\n\r\n\ttoggleHeart() {\r\n\t\t// if(this.heartType == 'heart-empty') {\r\n\t\t// \tthis.postReference.update({\r\n\t\t// \t\tlikes: firestore.FieldValue.arrayUnion(this.user.getUID())\r\n\t\t// \t})\r\n\t\t// } else {\r\n\t\t// \tthis.postReference.update({\r\n\t\t// \t\tlikes: firestore.FieldValue.arrayRemove(this.user.getUID())\r\n\t\t// \t})\r\n\t\t// }\r\n\t}\r\n\r\n}\r\n"],"sourceRoot":""}